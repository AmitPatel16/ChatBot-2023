{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Coding\\\\STUDY CODING\\\\06 React Js\\\\Project\\\\ChatBot\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport image from \"./img/bot_image.jpg\";\nimport { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const humanMessage = useRef();\n  const botmessage = useRef();\n  const input = useRef();\n  const date = new Date();\n  const hours = date.getHours();\n  const seconds = date.getSeconds();\n  const day = date.getDay();\n  const month = date.getMonth();\n  const year = date.getFullYear();\n  const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const [time, setTime] = useState(`${hours}:${seconds}`); //using the useState hook to get the data from the local time and set it to the time variable\n  const [dateTime, setDateTime] = useState(`${days[day]}, ${months[month]} ${year}`); //using the useState hook to get the data from the local date and set it to the dateTime variable\n\n  const checkStatus = e => {\n    let isActive = true;\n    if (dateTime === \"Thursday, Aug 13 2022\") {\n      //if the dateTime is Thursday, 13 Aug 2022, the bot will be inactive\n      isActive = false;\n    }\n    const status = document.querySelector(\".status\");\n    // selecting the status class\n    if (isActive === true) {\n      //if the bot is active\n      status.innerHTML = \"Active\";\n      status.style.color = \"green\";\n    } else {\n      status.innerHTML = \"Not Active\";\n      status.style.color = \"red\";\n    }\n  };\n  const handleInput = () => {\n    const botMessage = document.querySelector(\"#message1\");\n    const userMessage = document.querySelector(\"#message2\");\n    const inputRef = input.current;\n    const getHumanMessage = humanMessage.current;\n    const getBotMessage = botmessage.current;\n    let badwords = [\"fuck|bad|stupid|useless|bitch|crazy|nonsense\"];\n    let words = new RegExp(badwords);\n    if (words.test(document.querySelector(\"#input\").value)) {\n      // if the input contains bad words\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"Please do not use bad words\"; // display the message\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n    let welcome = [\"hi|hello|Hello|hey|sup|yo|wassup|whats up|howdy|greetings|good morning|good afternoon|good evening\"];\n    let words2 = new RegExp(welcome);\n    if (words2.test(document.querySelector(\"#input\").value)) {\n      const status = document.querySelector(\".status\");\n      // if the input contains welcome words\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"Hello There how are you doing today?\"; // display the message\n        status.innerText = \"Active\";\n        status.style.color = \"green\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n    let bye = [\"bye|Bye|goodbye|see you later|cya|goodnight|goodbye\"];\n    let words3 = new RegExp(bye);\n    if (words3.test(document.querySelector(\"#input\").value)) {\n      const status = document.querySelector(\".status\");\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"Bye, have a nice day\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n      setTimeout(() => {\n        status.innerText = \"Not active\";\n        status.style.color = \"red\";\n      }, 5000);\n    }\n    let thanks = [\"Thanks|thanks|thank you|thank you very much|Thank you very much\"];\n    let words4 = new RegExp(thanks);\n    if (words4.test(document.querySelector(\"#input\").value)) {\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"You are welcome\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n    let how = [\"How are you|how are you doing|how are you doing today|how are you doing today|How are you|how are you\"];\n    let words5 = new RegExp(how);\n    if (words5.test(document.querySelector(\"#input\").value)) {\n      const status = document.querySelector(\".status\");\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"I am fine, thank you\";\n        status.innerText = \"Active\";\n        status.style.color = \"green\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n    let good = [\"That's good|Sound nice|that sounds awesome|that sounds great|Great|great|sounds great|that's sounds good|Nice|nice\"];\n    let words6 = new RegExp(good);\n    if (words6.test(document.querySelector(\"#input\").value)) {\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"😁\";\n        inputRef.value = \"\"; // clear the input\n      }, 1000);\n    }\n    let response = [\"I'm fine|I am fine|I am fine today|I am fine today|i'm fine|i'm great|I'm fine|I'm great|I'm good|i'm good|great|Great\"];\n    let words7 = new RegExp(response);\n    if (words7.test(document.querySelector(\"#input\").value)) {\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"That is good\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n    let nameAsk = [\"What's your name|what's your name|What is your name|what is your name\"];\n    let words8 = new RegExp(nameAsk);\n    if (words8.test(document.querySelector(\"#input\").value)) {\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"My name is Bot\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n    let owner = [\"Who is the owner|who is the owner|Who is the owner of this bot|who is the owner of this bot|Who made you|who made you|Who is your maker|Who made you|who is your maker|who is your owner|Who is your owner\"];\n    let words9 = new RegExp(owner);\n    if (words9.test(document.querySelector(\"#input\").value)) {\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"The owner of this bot is Treasure\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n    let owner2 = [\"Who's Treasure|who's Treasure|Who is Treasure|who is Treasure\"];\n    let words10 = new RegExp(owner2);\n    if (words10.test(document.querySelector(\"#input\").value)) {\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"Amit is a programmer based on ReactJS and NodeJS he is the owner of a youtube channel called Creative Tutorials\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n    let ageAsk = [\"What's your age|what's your age|What is your age|what is your age|How old are you|how old are you\"]; //adding the age-question\n    let words11 = new RegExp(ageAsk);\n    if (words11.test(document.querySelector(\"#input\").value)) {\n      // if the input contains some question\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"I am 1 year old\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n    getHumanMessage.innerText = inputRef.value; // display the message\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    onLoad: checkStatus,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"img\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: image,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"name\",\n              children: \"ChatBot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status\",\n              children: \"Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main_content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"messages\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bot-message\",\n                id: \"message1\",\n                ref: botmessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"human-message\",\n                id: \"message2\",\n                ref: humanMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bottom\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btm\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"input\",\n                placeholder: \"Enter your message\",\n                ref: input\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleInput,\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-paper-plane\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 19\n                }, this), \"Send\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6v0bSWcspbSh3jbw7HltZfTK7qE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["image","useState","useRef","App","humanMessage","botmessage","input","date","Date","hours","getHours","seconds","getSeconds","day","getDay","month","getMonth","year","getFullYear","days","months","time","setTime","dateTime","setDateTime","checkStatus","e","isActive","status","document","querySelector","innerHTML","style","color","handleInput","botMessage","userMessage","inputRef","current","getHumanMessage","getBotMessage","badwords","words","RegExp","test","value","innerText","setTimeout","welcome","words2","bye","words3","thanks","words4","how","words5","good","words6","response","words7","nameAsk","words8","owner","words9","owner2","words10","ageAsk","words11"],"sources":["D:/My Coding/STUDY CODING/06 React Js/Project/ChatBot/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport image from \"./img/bot_image.jpg\";\nimport { useState, useRef } from \"react\";\n\nfunction App() {\n  const humanMessage = useRef();\n  const botmessage = useRef();\n  const input = useRef();\n\n  const date = new Date();\n  const hours = date.getHours();\n  const seconds = date.getSeconds();\n  const day = date.getDay();\n  const month = date.getMonth();\n  const year = date.getFullYear();\n\n  const days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  const [time, setTime] = useState(`${hours}:${seconds}`); //using the useState hook to get the data from the local time and set it to the time variable\n  const [dateTime, setDateTime] = useState(\n    `${days[day]}, ${months[month]} ${year}`\n  ); //using the useState hook to get the data from the local date and set it to the dateTime variable\n\n  const checkStatus = (e) => {\n    let isActive = true;\n    if (dateTime === \"Thursday, Aug 13 2022\") {\n      //if the dateTime is Thursday, 13 Aug 2022, the bot will be inactive\n      isActive = false;\n    }\n    const status = document.querySelector(\".status\");\n    // selecting the status class\n    if (isActive === true) {\n      //if the bot is active\n      status.innerHTML = \"Active\";\n      status.style.color = \"green\";\n    } else {\n      status.innerHTML = \"Not Active\";\n      status.style.color = \"red\";\n    }\n  };\n  const handleInput = () => {\n    const botMessage = document.querySelector(\"#message1\");\n    const userMessage = document.querySelector(\"#message2\");\n    const inputRef = input.current;\n    const getHumanMessage = humanMessage.current;\n    const getBotMessage = botmessage.current;\n\n    let badwords = [\"fuck|bad|stupid|useless|bitch|crazy|nonsense\"];\n    let words = new RegExp(badwords);\n    if (words.test(document.querySelector(\"#input\").value)) {\n      // if the input contains bad words\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"Please do not use bad words\"; // display the message\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n    let welcome = [\n      \"hi|hello|Hello|hey|sup|yo|wassup|whats up|howdy|greetings|good morning|good afternoon|good evening\",\n    ];\n    let words2 = new RegExp(welcome);\n    if (words2.test(document.querySelector(\"#input\").value)) {\n      const status = document.querySelector(\".status\");\n      // if the input contains welcome words\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"Hello There how are you doing today?\"; // display the message\n        status.innerText = \"Active\";\n        status.style.color = \"green\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n    let bye = [\"bye|Bye|goodbye|see you later|cya|goodnight|goodbye\"];\n    let words3 = new RegExp(bye);\n    if (words3.test(document.querySelector(\"#input\").value)) {\n      const status = document.querySelector(\".status\");\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"Bye, have a nice day\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n      setTimeout(() => {\n        status.innerText = \"Not active\";\n        status.style.color = \"red\";\n      }, 5000);\n    }\n    let thanks = [\n      \"Thanks|thanks|thank you|thank you very much|Thank you very much\",\n    ];\n    let words4 = new RegExp(thanks);\n    if (words4.test(document.querySelector(\"#input\").value)) {\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"You are welcome\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n    let how = [\n      \"How are you|how are you doing|how are you doing today|how are you doing today|How are you|how are you\",\n    ];\n    let words5 = new RegExp(how);\n    if (words5.test(document.querySelector(\"#input\").value)) {\n      const status = document.querySelector(\".status\");\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"I am fine, thank you\";\n        status.innerText = \"Active\";\n        status.style.color = \"green\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n    let good = [\n      \"That's good|Sound nice|that sounds awesome|that sounds great|Great|great|sounds great|that's sounds good|Nice|nice\",\n    ];\n    let words6 = new RegExp(good);\n    if (words6.test(document.querySelector(\"#input\").value)) {\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"😁\";\n        inputRef.value = \"\"; // clear the input\n      }, 1000);\n    }\n\n    let response = [\n      \"I'm fine|I am fine|I am fine today|I am fine today|i'm fine|i'm great|I'm fine|I'm great|I'm good|i'm good|great|Great\",\n    ];\n    let words7 = new RegExp(response);\n    if (words7.test(document.querySelector(\"#input\").value)) {\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"That is good\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n\n    let nameAsk = [\n      \"What's your name|what's your name|What is your name|what is your name\",\n    ];\n    let words8 = new RegExp(nameAsk);\n    if (words8.test(document.querySelector(\"#input\").value)) {\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"My name is Bot\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n\n    let owner = [\n      \"Who is the owner|who is the owner|Who is the owner of this bot|who is the owner of this bot|Who made you|who made you|Who is your maker|Who made you|who is your maker|who is your owner|Who is your owner\",\n    ];\n    let words9 = new RegExp(owner);\n    if (words9.test(document.querySelector(\"#input\").value)) {\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"The owner of this bot is Treasure\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n\n    let owner2 = [\n      \"Who's Treasure|who's Treasure|Who is Treasure|who is Treasure\",\n    ];\n    let words10 = new RegExp(owner2);\n    if (words10.test(document.querySelector(\"#input\").value)) {\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText =\n          \"Amit is a programmer based on ReactJS and NodeJS he is the owner of a youtube channel called Creative Tutorials\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n\n    let ageAsk = [\n      \"What's your age|what's your age|What is your age|what is your age|How old are you|how old are you\",\n    ]; //adding the age-question\n    let words11 = new RegExp(ageAsk);\n    if (words11.test(document.querySelector(\"#input\").value)) {\n      // if the input contains some question\n      getBotMessage.innerText = \"Typing...\";\n      setTimeout(() => {\n        getBotMessage.innerText = \"I am 1 year old\";\n        inputRef.value = \"\"; // clear the input\n      }, 2000);\n    }\n    getHumanMessage.innerText = inputRef.value; // display the message\n  };\n  return (\n    <div className=\"App\" onLoad={checkStatus}>\n      <div className=\"wrapper\">\n        <div className=\"content\">\n          <div className=\"header\">\n            <div className=\"img\">\n              <img src={image} alt=\"\" />\n            </div>\n            <div className=\"right\">\n              <div className=\"name\">ChatBot</div>\n              <div className=\"status\">Active</div>\n            </div>\n          </div>\n          <div className=\"main\">\n            <div className=\"main_content\">\n              <div className=\"messages\">\n                <div\n                  className=\"bot-message\"\n                  id=\"message1\"\n                  ref={botmessage}\n                ></div>\n                <div\n                  className=\"human-message\"\n                  id=\"message2\"\n                  ref={humanMessage}\n                ></div>\n              </div>\n            </div>\n          </div>\n          <div className=\"bottom\">\n            <div className=\"btm\">\n              <div className=\"input\">\n                <input\n                  type=\"text\"\n                  id=\"input\"\n                  placeholder=\"Enter your message\"\n                  ref={input}\n                />\n              </div>\n              <div className=\"btn\">\n                <button onClick={handleInput}>\n                  <i className=\"fas fa-paper-plane\"></i>Send\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}